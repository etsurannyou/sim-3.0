*,
*::before,
*::after {
  box-sizing: border-box;
  margin: 0;
}
:root {
  font-size: calc(0.5vw + 0.5rem + 0.5vh);
  --bg-clr-dark-0: rgb(24, 23, 44);
  --bg-clr-dark-1: rgb(26, 24, 83);
  --bg-clr-dark-2: rgb(32, 29, 124);
  --bg-clr-dark-3: rgb(34, 30, 164);
  --clr-yellow: rgb(90, 78, 5);
  --ff-primary: Comic Sans MS, Comic Sans;
  --font-clr: rgb(212, 194, 191);
  --input-bg: white;
  --input-f-clr: black;
  --button-bg: white;
  --button-f-clr: black;
  --table-bg: white;
  --table-f-clr: black;
  --border-clr: rgb(161, 161, 161);
  --title-clr: white;
  --other-font-clr: white;
  --log-bg: #333;
}
body {
  background-color: var(--bg-clr-dark-1);
  font-family: var(--ff-primary);
  color: var(--font-clr);
}
button {
  white-space: nowrap;
}
a {
  color: inherit;
}
input:not(.commandInput),
select,
textarea {
  background-color: var(--input-bg) !important;
  color: var(--table-f-clr) !important;
  border: none;
  outline: 1px solid var(--border-clr);
  border-radius: 0.2rem;
  transition: background-color 100ms ease-in-out, color 100ms ease-in-out;
}
button {
  background-color: var(--button-bg) !important;
  color: var(--button-f-clr) !important;
  border: none;
  outline: 1px solid var(--border-clr);
  border-radius: 0.2rem;
  padding: 0.3em;
  transition: background-color 100ms ease-in-out, color 100ms ease-in-out, transform 0.1s;
}
table,
th,
td,
tr {
  background-color: var(--table-bg) !important;
  color: var(--table-f-clr) !important;
  border: 1px solid var(--table-f-clr) !important;
  transition: background-color 100ms ease-in-out, color 100ms ease-in-out;
}
.font-color {
  transition: color 100ms ease-in-out;
  color: var(--other-font-clr);
}
/* Nav */

.nav {
  background-color: var(--bg-clr-dark-0);
  padding: 0.4em 1rem;
  display: grid;
  grid-template-columns: auto 1fr;
  gap: min(12vw, 10rem);
  min-width: max-content;
  color: inherit;
}
.navButton-wrapper {
  display: grid;
  grid-template-columns: repeat(3, auto);
  gap: 1rem;
  width: fit-content;
}
.navButton {
  padding: 0.2em 0.3em;
  border-radius: 0.2em;
  background-color: var(--clr-yellow);
  color: inherit;
  border: none;
  cursor: pointer;
  font-size: 0.9rem;
  height: fit-content;
  width: fit-content;
  margin-top: auto;
  transition: transform 0.1s;
}
.navButton:hover {
  transform: scale(1.1);
}
.nav h1 {
  font-size: 1.8rem;
}
.instructions,
.versionLog {
  position: fixed;
  inset: 0;
  background-color: rgb(0, 0, 0, 0.5);
  z-index: 10000;
}
.instructions > div,
.versionLog > div {
  position: fixed;
  inset: 0;
  color: var(--other-font-clr);
  background-color: var(--log-bg) !important;
  z-index: 10000;
}
.log {
  position: relative;
  margin: 2em auto 0 auto;
  max-width: 90%;
  max-height: 55vh;
  padding: 1em 1.2em;
  overflow: auto;
}
.log::-webkit-scrollbar {
  width: 1rem;
}
.log::-webkit-scrollbar-thumb {
  background-color: #555;
  border-radius: 0.5rem;
}
.log::-webkit-scrollbar-track {
  background-color: #222;
  border-radius: 0.5rem;
}
ul li ~ li {
  margin-top: 0.3em;
}
.log > div ~ div {
  margin-top: 1.5rem;
}
.versionNumber {
  margin-bottom: 1rem;
}
.closeLog {
  display: block;
  margin-inline: auto 5rem;
  font-size: 1rem;
  cursor: pointer;
  border-radius: 100vw;
  padding: 0.3em 0.5em;
  background-color: #222;
  color: white;
  transition: transform 0.1s;
  margin-top: 0.5rem;
}
.closeLog:hover {
  transform: scale(1.1);
}

.toggle {
  position: relative;
  display: inline;
  background-color: white;
  padding: 0rem 1.5rem;
  border-radius: 100vw;
  cursor: pointer;
  outline: 1px solid black;
  transition: background-color 200ms ease-in-out, outline 200ms ease-in-out;
}
.toggle::before {
  content: "";
  position: absolute;
  border-radius: 50%;
  background-color: black;
  height: 85%;
  aspect-ratio: 1;
  top: 7.5%;
  left: 5%;
  right: unset;
  transition: left 500ms ease-in-out, right 500ms ease-in-out;
}
#toggleDarkMode:checked + .toggle {
  background-color: black;
  outline: 1px solid var(--other-font-clr);
}
#toggleDarkMode:checked + .toggle::before {
  background-color: rgb(178, 178, 178);
  right: calc(95% - 1.2rem);
  left: unset;
  right: 5%;
}
.toggle::after {
  content: "Off";
  position: absolute;
  font-size: 0.6rem;
  top: 50%;
  transform: translateY(-50%);
  color: black;
  transition: color 200ms ease-in-out;
}
#toggleDarkMode:checked + .toggle::after {
  content: "On";
  position: absolute;
  font-size: 0.6rem;
  top: 50%;
  transform: translateY(-50%);
  left: 10%;
  color: rgb(200, 200, 200);
}
.labelDM::before {
  position: absolute;
  content: "Dark mode";
  top: min(-100%, -1.4vw);
  font-size: 0.7rem;
  left: 50%;
  transform: translateX(-50%);
  white-space: nowrap;
  color: rgb(200, 200, 200);
}
/* Theory simulator */

.content-wrapper {
  padding: min(3vw, 1.5rem * 0.85);
}
.controls {
  display: grid;
  grid-template-columns: repeat(5, auto);
  width: fit-content;
  gap: min(2vw, 2rem);
}
.controls ~ .controls {
  margin-top: 1.5rem;
}
.controls input,
.controls select {
  font-size: 0.75rem;
}
.button-wrapper {
  display: grid;
  grid-template-columns: repeat(5, auto);
  gap: 1rem;
  width: fit-content;
  margin-top: 2rem;
}
.button-wrapper button {
  font-size: 0.8rem;
  padding: 0.1em 0.2em;
  cursor: pointer;
}
.button-wrapper button:hover {
  transform: scale(1.1);
}
mark {
  background: transparent;
  font-size: 1rem;
}
table,
th,
td {
  position: relative;
  border: 1px solid black;
  background: white;
  color: black;
  height: fit-content;
  white-space: nowrap;
}
th,
td {
  text-align: left ;
}
.small  td {
  padding-inline: 0.2rem;
  font-size: 0.7rem;
  white-space: nowrap;
}
.small th{
  padding-inline: 0.2rem;
  font-size: 0.8rem;
  white-space: nowrap;
}
.big th  {
  padding-inline: 0.3em;
  font-size: 0.8rem;
}
/* tr {
  cursor: pointer;
} */
table {
  margin-block-start: 2.5rem;
}
tr:hover {
  background-color: #666;
}
.inputMode::before {
  content: attr(data-value);
  top: min(-300%, -2vw);
  left: 50%;
  transform: translateX(-50%);
  position: absolute;
  color: white;
  white-space: nowrap;
}
.hardCap::before {
  content: "Hard Cap?";
  top: min(-70%, -1.3vw);
  left: 50%;
  transform: translateX(-50%);
  position: absolute;
  color: white;
  white-space: nowrap;
  font-size: 0.7rem;
}
.timeDiffWrapper {
  flex-direction: column;
  gap: 0.3rem;
}
.timeDiffWrapper input {
  width: 20rem;
}
.simAllInputs {
  display: inline-flex;
  flex-direction: column;
  gap: 0.5rem;
  margin-right: 1rem;
}
.simAllInputs button:hover {
  cursor: pointer;
}
.saveDist {
  position: relative;
}
.saveDist::before {
  content: "Saved!";
  position: absolute;
  inset: 0;
  transition: opacity 500ms;
  color: white;
  font-size: 1rem;
  opacity: 0;
  top: -150%;
}
.saveDist.animate::before {
  opacity: 1;
}
textarea {
  resize: none;
  width: 6rem;
  height: 1.8em;
  padding: 0.2em;
  font-size: 0.7rem;
}

.settingsBtn {
  background: url(./settings.png);
  width: 2.25rem;
  aspect-ratio: 1;
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  background-color: transparent !important;
  outline: 0;
  cursor: pointer;
  border-radius: 50%;
  transition: scale 100ms, box-shadow 100ms;
  translate: 0 20%;
}
.settingsBtn:hover {
  box-shadow: 0 0 0.6rem 0.05rem rgb(2, 145, 255), inset 0 0 0.4rem 0.03rem rgb(2, 145, 255);
  scale: 1.1;
}
.settings {
  --inline-padding: min(10vw, 5rem);
  padding: 2rem var(--inline-padding);
  background-color: rgb(13, 15, 131);
  color: white;
  border: 0.1rem solid white;
  border-radius: 0.5rem;
  top: 50%;
  left: 50%;
  translate: -50% -50%;
}
.settings::backdrop {
  background-color: black;
  opacity: 0.6;
}
.settingsCloseBtn {
  border-radius: 50%;
  width: 1.5rem;
  aspect-ratio: 1;
  background-color: red !important;
  color: white !important;
  font-weight: bold;
  font-size: 0.8rem;
  font-style: italic;
  font-family: "Luicida Handwriting";
  cursor: pointer;
  transition: scale 100ms;
  position: absolute;
  right: 7%;
  top: 10%;
}
.settingsCloseBtn:hover {
  scale: 1.2;
}
.settings input {
  outline: 0;
}
